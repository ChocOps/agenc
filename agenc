#!/bin/sh

version="v0.0.6"

#
# Check for dependencies
#

if ! $(type jq > /dev/null); then
  echo -e "agenc: missing jq (https://github.com/jqlang/jq)"
  exit 1
fi

if ! $(type yq > /dev/null); then
  echo -e "agenc: missing yq (https://github.com/kislyuk/yq)"
  exit 1
fi

if ! $(type age > /dev/null); then
  echo -e "agenc: missing age (https://github.com/FiloSottile/age)"
  exit 1
fi

#
# help funcion
#

help() {
  echo -e "agenc ${version}"
  echo -e "usage: agenc <action>"
  echo -e "Avaliable actions"
  echo -e "   help               show this message"
  echo -e "   version            show script version"
  echo -e "   encrypt            encrypt all files"
  echo -e "   decrypt            decrypt all files"
}

#
# update function
#

update() {
  if [ "$(id -u)" -ne 0 ]; then
    echo -e "agenc: you need to run update with sudo"
    exit 1
  fi

  api="https://api.github.com/repos/ChocOps/agenc"
  tag=$(curl -s "${api}/tags" | jq -r '.[0].name')

  if [ "${tag}" = "${version}" ]; then
    echo -e "agenc: you are using the latest version (${version})"
    exit 0
  fi

  raw="https://raw.githubusercontent.com/ChocOps/agenc/refs/tags/${tag}/agenc"
  curl -s "${raw}" -o /usr/local/bin/agenc
}


#
# Getting first argument (lowercase)
#

action=${1,,}; shift

#
# Validate first argument
#

case ${action} in
  (-v|--version|version)
    echo -e "agenc/${version}"
    exit 0
    ;;
  (-h|--help|help)
    help
    exit 0
    ;;
  (update)
    update
    exit 0
    ;;
  (encrypt|decrypt)
    ;;
  (*)
    help
	echo -e "Oops: invalid action (${action})"
    exit 1
    ;;
esac

agenc_file="./agenc.yaml"

if [ ! -f "./agenc.yaml" ]; then
  echo -e "agenc: missing agenc.yaml"
  exit 1
fi

recipients_list=$(yq -r ".agenc.recipients[]?" "${agenc_file}")

if [ -z "${recipients_list}" ]; then
  echo -e "agenc: no recipients defined in agenc.yaml"
  exit 1
fi

recipients=""
for recipient in ${recipients_list}; do
  RECIPIENTS="${recipients} --recipient ${recipient}"
done

identity=$(yq -r ".agenc.identity" "${agenc_file}")
eval identity="${identity}"

if [ ! -f "${identity}" ]; then
  echo -e "agenc: identity file doesn't exists"
  exit 1
fi

files=$(yq -r ".agenc.files[]" "${agenc_file}")

#
# Encrypt
#

if [ "${action}" = "encrypt" ]; then
	for file in ${files}; do
		echo -e "Encrypting $file"
		age ${recipients} --armor --encrypt -o ${file}.age ${file} 
		if [ "$?" -ne 0 ]; then
			echo -e "Something went wrong with file ${file}"
			exit 1
		fi
	done

	echo -e "Done..."
	exit 0
fi

#
# Decrypt
#

if [ "${action}" = "decrypt" ]; then
	for file in $files; do
		echo -e "Decrypting $file"
		age --identity ${identity} --decrypt -o ${file} ${file}.age
		if [ "$?" -ne 0 ]; then
			echo -e "Something went wrong with file ${file}"
			exit 1
		fi
	done

	echo -e "Done..."
	exit 0
fi

