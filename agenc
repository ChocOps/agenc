#!/bin/sh

VERSION="v0.0.3"

#
# Check for dependencies
#
#

if ! $(type jq > /dev/null); then
  echo -e "agenc: missing jq (https://github.com/jqlang/jq)"
  exit 1
fi

if ! $(type yq > /dev/null); then
  echo -e "agenc: missing yq (https://github.com/kislyuk/yq)"
  exit 1
fi

if ! $(type age > /dev/null); then
  echo -e "agenc: missing age (https://github.com/FiloSottile/age)"
  exit 1
fi

#
# help funcion
#

help() {
  echo -e "agenc $VERSION"
  echo -e "usage: agenc <action>"
  echo -e "Avaliable actions"
  echo -e "   help               show this message"
  echo -e "   version            show script version"
  echo -e "   encrypt            encrypt all files"
  echo -e "   decrypt            decrypt all files"
}

#
# update function
#

update() {
  API="https://api.github.com/repos/ChocOps/agenc"
  LATEST_TAG=$(curl -s "$API/tags" | jq -r '.[0].name')

  if [ "$LATEST_TAG" = "$VERSION" ]; then
    echo -e "agenc: you are using the latest version ($VERSION)"
    exit 0
  fi

  RAW="https://raw.githubusercontent.com/ChocOps/agenc/refs/tags/$LATEST_TAG/agenc"
  sudo curl -s "$RAW" -o /usr/local/bin/agenc
}


#
# Getting first argument (lowercase)
#

action=${1,,}; shift

#
# Validate first argument
#

case ${action} in
  (-v|--version|version)
    echo -e "agenc/$VERSION"
    exit 0
    ;;
  (-h|--help|help)
    help
    exit 0
    ;;
  (update)
    update
    exit 0
    ;;
  (encrypt|decrypt)
    ;;
  (*)
    help
	echo -e "Oops: invalid action (${action})"
    exit 1
    ;;
esac

AGENC_FILE="./agenc.yaml"

if [ ! -f "./agenc.yaml" ]; then
  echo -e "agenc: missing agenc.yaml"
  exit 1
fi

RECIPIENTS_LIST=$(yq -r ".agenc.recipients[]?" "${AGENC_FILE}")

if [ -z "${RECIPIENTS_LIST}" ]; then
  echo -e "agenc: no recipients defined in agenc.yaml"
  exit 1
fi

RECIPIENTS=""
for recipient in ${RECIPIENTS_LIST}; do
  RECIPIENTS="${RECIPIENTS} --recipient ${recipient}"
done

IDENTITY=$(yq -r ".agenc.identity" "${AGENC_FILE}")
eval IDENTITY="$IDENTITY"

if [ ! -f "${IDENTITY}" ]; then
  echo -e "agenc: identity file doesn't exists"
  exit 1
fi

FILES=$(yq -r ".agenc.files[]" "${AGENC_FILE}")

#
# Encrypt
#

if [ "${action}" = "encrypt" ]; then
	for file in $FILES; do
		echo -e "Encrypting $file"
		age $RECIPIENTS --armor --encrypt -o $file.age $file 
		if [ "$?" -ne 0 ]; then
			echo -e "Something went wrong with file $file"
			exit 1
		fi
	done

	echo -e "Done..."
	exit 0
fi

#
# Decrypt
#

if [ "${action}" = "decrypt" ]; then
	for file in $FILES; do
		echo -e "Decrypting $file"
		age --identity $IDENTITY --decrypt -o $file $file.age
		if [ "$?" -ne 0 ]; then
			echo -e "Something went wrong with file $file"
			exit 1
		fi
	done

	echo -e "Done..."
	exit 0
fi

